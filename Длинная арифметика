//задача №2 Длинная арифметика
#include <iostream>
#include <fstream>
#include <string>
using namespace std;

int max(int a, int b) {
	if (a > b) return a;
	return b;
}

void mass(string s, int mas[1000])
{
	for (int i = 0; i < s.length(); i++)
	{
		mas[i + 1] = s[i] - '0';

	}
	mas[0] = s.length();
	for (int i = 1; i < mas[0] / 2 + 1; i++)
	{
		int k = mas[0] - i + 1;
		swap(mas[i], mas[k]);
	}
}
	void summ(int m1[1000], int m2[1000], int sum[1000])
	{ 
		sum[0] = max(m1[0], m2[0]);
		int q = 0;
		for (int i = 1; i <= sum[0]; i++)
		{
			
				sum[i] = m1[i] + m2[i] + q;
				q = sum[i] / 10;
				sum[i] = sum[i] % 10;
			
		}
		if (q != 0)
		{
			sum[0]++;
			sum[sum[0]] = q;

		}
	}
	void ressum(int sum[1000])
	{
		for (int i = 1; i <= sum[0] / 2; i++)
		{
			std::swap(sum[i], sum[sum[0] - i + 1]);
		}
	}
	void sumresult(int sum[1000], int m1[1000], int m2[1000])
	{
		summ(m1, m2, sum);
		ressum(sum);
		for (int i = 1; i <= sum[0]; i++)
		{
			cout << sum[i];
		}
		cout << endl;
	}
	void resmult(int mult[1000])
	{
		for (int i = 1; i <= mult[0] / 2; i++)
		{
			std::swap(mult[i], mult[mult[0] - i + 1]);
		}
	}

	void multi(int m1[1000], int m2[1000], int mult[1000])
	{
		mult[0] = m1[0] + m2[0];
		for (int i = 1; i <= m1[0]; i++)
		{
			int p = 0;
			for (int j = 1; j <= m2[0]; j++)
			{
				mult[i + j - 1] += m1[i]*m2[j];
				p = mult[i + j - 1] / 10;
				mult[i + j - 1] = mult[i + j - 1] % 10;
				mult[i + j] += p;

            }
		}

	}
	void multresult(int mult[1000], int m1[1000], int m2[1000])
	{
		multi(m1, m2, mult);
		
		if (mult[mult[0]] == 0)
		{
			mult[0]--;
		}
		resmult(mult);
		for (int i = 1; i <= mult[0]; i++)
		{
			cout << mult[i];
		}


	}

int main()
{
	string str2;
	string str1;
	int mas1[1000] = {0};
	int mas2[1000] = {0};
	int sum[1000] = {0};
	int mult[1000] = {0};
	ifstream fin("input.txt");
	ofstream fout("output.txt");
	fin >> str1;
	fin >> str2;
	mass(str1, mas1);
	mass(str2, mas2);
	summ(mas1, mas2, sum);
	sumresult(sum, mas1, mas2);
	multresult(mult, mas1, mas2);
	
	

	/*for (int i = sum[0]; i >=1 ; i--)
	{
		fout << sum[i];
	}
	
	fout << endl;*/
	/*multi(mas1, mas2, mult);
	if (mult[mult[0]] == 0)
	{
		mult[0]--;
	}
	for (int i = mult[0]; i >= 1; i--)
	{
		fout << mult[i];
	}
	*/

	system("pause");
}
